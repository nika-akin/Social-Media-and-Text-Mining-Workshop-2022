"0","library(scales)"
"0","twt_retwt_summary <- mental %>%"
"0","  group_by(user_id, date) %>%"
"0","  summarize(tweets = n(),"
"0","            avg_retweets = exp(mean(log(retweets + 1))) - 1)"
"1","[38;5;250m`summarise()` has grouped output by 'user_id'. You can override using the `.groups`
argument.[39m
"
"0","startTime <- as.Date(""2014-01-01"")"
"0","endTime <- as.Date(""2017-12-31"")"
"0",""
"0","# create a start and end time R object"
"0","start.end <- c(startTime,endTime)"
"0","start.end"
"1","[1]"
"1"," ""2014-01-01"""
"1"," ""2017-12-31"""
"1","
"
"0","pl1<-twt_retwt_summary %>%"
"0","  ggplot(aes(date, tweets, group = user_id)) +"
"0","  geom_line( size = 0.4) +"
"0","  expand_limits(y = 0) +"
"0","  labs(x = ""Time"","
"0","       y = ""Number of depression tweets per day"") +"
"0","  (scale_x_date(limits=start.end,"
"0","                             breaks=date_breaks(""1 month""),"
"0","                             labels=date_format(""%b %y"")))"
"0",""
"0","pl2 <-twt_retwt_summary %>%"
"0","  ggplot(aes(date, avg_retweets, group=user_id)) +"
"0","  geom_line( size = 0.4) +"
"0","  expand_limits(y = 0) +"
"0","  labs(x = ""Time"","
"0","       y = ""Average (geometric mean) retweets each day"")+"
"0"," scale_x_date(date_labels = ""%m %Y"")"
"0",""
"0","gridExtra::grid.arrange(pl1,pl2, ncol=2)"
"2","Warning:"
"2"," [38;5;250mRemoved 60 rows containing missing values (`geom_line()`).[39m
"
